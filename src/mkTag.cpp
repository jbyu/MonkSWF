/*
 *  mkTag.cpp
 *  MonkSWF
 *
 *  Created by Micah Pearlman on 3/20/09.
 *  Copyright 2009 MP Engineering. All rights reserved.
 *
 */

#include "mkTag.h"

using namespace std;

namespace MonkSWF {

    static std::map<uint32_t, const char*> smTagNames;

    void init()
    {
    smTagNames[TAG_END]="END";
	smTagNames[TAG_SHOW_FRAME]="SHOW_FRAME";
	smTagNames[TAG_DEFINE_SHAPE]="DEFINE_SHAPE";
	smTagNames[TAG_PLACE_OBJECT]="PLACE_OBJECT";
	smTagNames[TAG_REMOVE_OBJECT]="REMOVE_OBJECT";
	smTagNames[TAG_DEFINE_BITS]="DEFINE_BITS";
	smTagNames[TAG_DEFINE_BUTTON]="DEFINE_BUTTON";
	smTagNames[TAG_JPEG_TABLES]="JPEG_TABLES";
	smTagNames[TAG_SET_BACKGROUND_COLOR]="SET_BACKGROUND_COLOR";
	smTagNames[TAG_DEFINE_FONT]="DEFINE_FONT";
	smTagNames[TAG_DEFINE_TEXT]="DEFINE_TEXT";
	smTagNames[TAG_DO_ACTION]="DO_ACTION";
	smTagNames[TAG_DEFINE_FONT_INFO]="DEFINE_FONT_INFO";
	smTagNames[TAG_DEFINE_SOUND]="DEFINE_SOUND";
	smTagNames[TAG_START_SOUND]="START_SOUND";
	smTagNames[TAG_DEFINE_BUTTON_SOUND]="DEFINE_BUTTON_SOUND";
	smTagNames[TAG_SOUND_STREAM_HEAD]="SOUND_STREAM_HEAD";
	smTagNames[TAG_SOUND_STREAM_BLOCK]="SOUND_STREAM_BLOCK";
	smTagNames[TAG_DEFINE_BITS_LOSSLESS]="DEFINE_BITS_LOSSLESS";
	smTagNames[TAG_DEFINE_BITS_JPEG2]="DEFINE_BITS_JPEG2";
	smTagNames[TAG_DEFINE_SHAPE2]="DEFINE_SHAPE2";
	smTagNames[TAG_DEFINE_BUTTON_CXFORM]="DEFINE_BUTTON_CXFORM";
	smTagNames[TAG_PROTECT]="PROTECT";
	smTagNames[TAG_PLACE_OBJECT2]="PLACE_OBJECT2";
	smTagNames[TAG_REMOVE_OBJECT2]="REMOVE_OBJECT2";
	smTagNames[TAG_DEFINE_SHAPE3]="DEFINE_SHAPE3";
	smTagNames[TAG_DEFINE_TEXT2]="DEFINE_TEXT2";
	smTagNames[TAG_DEFINE_BUTTON2]="DEFINE_BUTTON2";
	smTagNames[TAG_DEFINE_BITS_JPEG3]="DEFINE_BITS_JPEG3";
	smTagNames[TAG_DEFINE_BITS_LOSSLESS2]="DEFINE_BITS_LOSSLESS2";
	smTagNames[TAG_DEFINE_EDIT_TEXT]="DEFINE_EDIT_TEXT";
	smTagNames[TAG_DEFINE_SPRITE]="DEFINE_SPRITE";
	smTagNames[TAG_FRAME_LABEL]="FRAME_LABEL";
	smTagNames[TAG_SOUND_STREAM_HEAD2]="SOUND_STREAM_HEAD2";
	smTagNames[TAG_DEFINE_MORPH_SHAPE]="DEFINE_MORPH_SHAPE";
	smTagNames[TAG_DEFINE_FONT2]="DEFINE_FONT2";
	smTagNames[TAG_EXPORT_ASSETS]="EXPORT_ASSETS";
	smTagNames[TAG_IMPORT_ASSETS]="IMPORT_ASSETS";
	smTagNames[TAG_ENABLE_DEBUGGER]="ENABLE_DEBUGGER";
	smTagNames[TAG_DO_INIT_ACTION]="DO_INIT_ACTION";
	smTagNames[TAG_DEFINE_VIDEO_STREAM]="DEFINE_VIDEO_STREAM";
	smTagNames[TAG_VIDEO_FRAME]="VIDEO_FRAME";
	smTagNames[TAG_DEFINE_FONT_INFO2]="DEFINE_FONT_INFO2";
	smTagNames[TAG_ENABLE_DEBUGGER2]="ENABLE_DEBUGGER2";
	smTagNames[TAG_SCRIPT_LIMITS]="SCRIPT_LIMITS";
	smTagNames[TAG_SET_TAB_INDEX]="SET_TAB_INDEX";
	smTagNames[TAG_FILE_ATTRIBUTES]="FILE_ATTRIBUTES";
	smTagNames[TAG_PLACE_OBJECT3]="PLACE_OBJECT3";
	smTagNames[TAG_IMPORT_ASSETS2]="IMPORT_ASSETS2";
	smTagNames[TAG_DEFINE_FONT_ALIGN_ZONES]="DEFINE_FONT_ALIGN_ZONES";
	smTagNames[TAG_DEFINE_CSM_TEXT_SETTINGS]="DEFINE_CSM_TEXT_SETTINGS";
	smTagNames[TAG_DEFINE_FONT3]="DEFINE_FONT3";
	smTagNames[TAG_SYMBOL_CLASS]="SYMBOL_CLASS";
	smTagNames[TAG_METADATA]="METADATA";
	smTagNames[TAG_DEFINE_SCALING_GRID]="DEFINE_SCALING_GRID";
	smTagNames[TAG_DO_ABC]="DO_ABC";
	smTagNames[TAG_DEFINE_SHAPE4]="DEFINE_SHAPE4";
	smTagNames[TAG_DEFINE_MORPH_SHAPE2]="DEFINE_MORPH_SHAPE2";
	smTagNames[TAG_DEFINE_SCENE_AND_FRAME_LABEL_DATA]="DEFINE_SCENE_AND_FRAME_LABEL_DATA";
	smTagNames[TAG_DEFINE_BINARY_DATA]="DEFINE_BINARY_DATA";
	smTagNames[TAG_DEFINE_FONT_NAME]="DEFINE_FONT_NAME";
	smTagNames[TAG_DEFINE_START_SOUND2]="DEFINE_START_SOUND2";
	smTagNames[TAG_DEFINE_BITS_JPEG4]="DEFINE_BITS_JPEG4";
	smTagNames[TAG_DEFINE_FONT4]="DEFINE_FONT4";
    }

	bool TagHeader::read( Reader* reader ) {
		uint16_t tagcode_and_length = reader->get<uint16_t>();
		
		_code = (tagcode_and_length >> 6 );
		_length = (tagcode_and_length & 0x3F );
		if( _length == 0x3f )	// if long tag read an additional 32 bit length value
			_length = reader->get<uint32_t>();
				
		return true;
	}
	
	void TagHeader::print() {
		MK_TRACE("code:%2d, length:%d\n",  _code , _length);
	}
}